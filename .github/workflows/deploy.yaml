name: Deploy
on:
    push:
        branches:
            - main
            - staging

env:
    REMOTE_HOST: "95.111.228.177"
    REMOTE_USER: "hivefive"
    PATH_PRODUCTION: "/var/www/hivefive"
    PATH_STAGING: "/var/www/hivefive_staging"
    URL_STAGING: "https://staging.hivefive.online"
    URL_PRODUCTION: "https://hivefive.online"

jobs:
    frontend:
        name: Deploy Frontend
        environment:
          name: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
          url: ${{ github.ref == 'refs/heads/main' && env.URL_PRODUCTION || env.URL_STAGING }}
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Setup SSH üîë
              run: |
                    mkdir -p ~/.ssh/
                    echo "${{ secrets.SSH_PRIV_KEY }}" > ~/.ssh/id_rsa
                    echo "${{ secrets.SSH_PUB_KEY }}" > ~/.ssh/id_rsa.pub
                    chmod 600 ~/.ssh/id_rsa
                    chmod 600 ~/.ssh/id_rsa.pub
                    ssh-keyscan -H ${{ env.REMOTE_HOST }} >> ~/.ssh/known_hosts
            - name: Dependencies üë®üèª‚Äçüíª
              run: |
                    cd front
                    npm install
                    rm .env
                    mv .env.${{ github.ref == 'refs/heads/main' && 'prod' || 'staging' }} .env
            - name: Build üèóÔ∏è
              run: |
                    cd front
                    npm run build
            - name: Deploy üöÄ
              run: |
                    cd front
                    rsync -avz -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" dist/* ${{ env.REMOTE_USER }}@${{ env.REMOTE_HOST }}:${{ github.ref == 'refs/heads/main' && env.PATH_PRODUCTION || env.PATH_STAGING }}/client
    backend:
        name: Deploy Backend
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Setup SSH üîë
              run: |
                    mkdir -p ~/.ssh/
                    echo "${{ secrets.SSH_PRIV_KEY }}" > ~/.ssh/id_rsa
                    echo "${{ secrets.SSH_PUB_KEY }}" > ~/.ssh/id_rsa.pub
                    chmod 600 ~/.ssh/id_rsa
                    chmod 600 ~/.ssh/id_rsa.pub
                    ssh-keyscan -H ${{ env.REMOTE_HOST }} >> ~/.ssh/known_hosts
            - name: Sync üîÑ
              run: |
                    cd back
                    rsync -avz -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" --exclude 'var' --exclude 'vendor' . ${{ env.REMOTE_USER }}@${{ env.REMOTE_HOST }}:${{ github.ref == 'refs/heads/main' && env.PATH_PRODUCTION || env.PATH_STAGING }}/back
            - name: Server Setup üèóÔ∏è
              run: |
                    ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ env.REMOTE_USER }}@${{ env.REMOTE_HOST }} << EOF
                    cd ${{ github.ref == 'refs/heads/main' && env.PATH_PRODUCTION || env.PATH_STAGING }}/back
                    export APP_ENV=prod
                    composer install --no-dev --optimize-autoloader --no-interaction --no-scripts --no-progress
                    echo "JWT_PASSPHRASE=$(openssl rand -base64 32)" >> .env.prod
                    echo "DATABASE_URL=postgresql://hivefive:${{ secrets.DB_PASSWORD }}@localhost:5432/hivefive" >> .env.prod
                    composer dump-env prod
                    php bin/console lexik:jwt:generate-keypair --skip-if-exists
                    php bin/console cache:clear
                    chmod 777 var
                    php bin/console doctrine:migrations:migrate -n --allow-no-migration
                    EOF